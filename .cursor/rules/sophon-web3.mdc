---
description: Sophon project and Web3 specific rules and patterns
globs: ["**/features/web3/**", "**/features/send/**", "**/features/profile/**"]
alwaysApply: false
---

# Sophon Project & Web3 Specific Rules

## Web3 Address Validation:
```tsx
// ALWAYS validate addresses
const isValidAddress = (addr: string) => {
  return addr && addr.startsWith('0x') && addr.length === 42;
};

// SAFE address rendering
{address && (
  <Text>{address.slice(0, 6)}...{address.slice(-4)}</Text>
)}

// NEVER render address directly
{address}  // Can be undefined!
```

## Token Amount Safety:
```tsx
// SAFE amount handling
const amount = Number.parseFloat(token.amount || '0');
{amount > 0 && <Component />}

// DANGEROUS
{token.amount && <Component />}  // Can be "0"!
```

## USD Value Display:
```tsx
// SAFE USD rendering
{usdValue > 0 && (
  <Text>${usdValue.toFixed(2)}</Text>
)}

// DANGEROUS  
{usdValue && <Text>...</Text>}  // Can render 0!
```

## Balance Checks:
```tsx
// SAFE balance validation
const hasBalance = Number.parseFloat(balance) > 0;
{hasBalance && <SendButton />}

// DANGEROUS
{balance && <SendButton />}  // Can be "0"!
```

## Sophon Token Constants:
- Always import from `~/features/web3/constants/tokens`
- Use `SOPH_TOKEN` for native token
- Use `SUPPORTED_TOKENS` for token list

## Transaction Safety:
```tsx
// ALWAYS capture transaction data
const txData = {
  token: formData.selectedToken,
  recipientAddress: formData.recipientAddress,
  amount: formData.amount,
};

// ALWAYS validate before sending
if (!txData.token || !txData.recipientAddress || !txData.amount) {
  throw new Error('Missing transaction data');
}
```

## Console Logging:
```tsx
// SAFE reactotron logging
if (console.tron) {
  console.tron.log('Safe message', data);
}

// DANGEROUS direct console.tron
console.tron.log('message');  // Can break if tron not available
```

REMEMBER: Web3 + React Native = Double the care needed!
